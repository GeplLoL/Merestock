
import React, { useEffect, useState } from 'react';
import {
  View, Text, TextInput, Button, StyleSheet, Alert, TouchableOpacity
} from 'react-native';
import { useDispatch } from 'react-redux';
import authService from '../services/authService';
import { setUser } from '../redux/userSlice';

export default function SignupScreen({ navigation, route }) {
  useEffect(() => console.log('üìù mounted', route.name), []);

  const [email, setEmail]       = useState('');
  const [password, setPassword] = useState('');
  const [confirm, setConfirm]   = useState('');
  const dispatch = useDispatch();

  const handleRegister = async () => {
    if (!email || !password || !confirm) {
      return Alert.alert('–û—à–∏–±–∫–∞', '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    }
    if (password !== confirm) {
      return Alert.alert('–û—à–∏–±–∫–∞', '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
    }
    try {
      const data = await authService.register(email, password);
      if (!data.token) {
        return Alert.alert('–û—à–∏–±–∫–∞', data.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è');
      }
      dispatch(setUser({ token: data.token, info: data }));
    } catch (err) {
      console.error('Register error', err);
      Alert.alert('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', err.message || '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>[SignupScreen]</Text>
      <TextInput
        placeholder="Email"
        style={styles.input}
        value={email} onChangeText={setEmail}
        autoCapitalize="none" keyboardType="email-address"
      />
      <TextInput
        placeholder="–ü–∞—Ä–æ–ª—å"
        style={styles.input}
        value={password} onChangeText={setPassword}
        secureTextEntry
      />
      <TextInput
        placeholder="–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
        style={styles.input}
        value={confirm} onChangeText={setConfirm}
        secureTextEntry
      />
      <Button title="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è" onPress={handleRegister} />
      <TouchableOpacity
        onPress={() => navigation.navigate('Login')}
        style={styles.link}
      >
        <Text style={styles.linkText}>–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏</Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container:{ flex:1, justifyContent:'center', padding:20 },
  title:    { fontSize:24, fontWeight:'bold', marginBottom:20, textAlign:'center' },
  input:    { borderBottomWidth:1, marginBottom:20, padding:10 },
  link:     { marginTop:12, alignItems:'center' },
  linkText: { color:'#0066CC' },
});
